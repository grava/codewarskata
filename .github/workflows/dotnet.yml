# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage"
    - name: Test Reporter
      uses: dorny/test-reporter@v1.9.1
      with:
        name: test-results
        path: '**/test-results.trx'
        reporter: dotnet-trx
    - name: Report results to DeepSource
      run: |
        # Tests have finished and a test coverage report is available
    
        # Install deepsource CLI
          # curl https://deepsource.io/cli | sh
          ls /home/runner/work/codewarskata/codewarskata/Katas/test/TestResults/
          cp **/coverage.cobertura.xml ./coverage.xml
    
        # From the root directory, run the report coverage command
          # ./bin/deepsource report --analyzer test-coverage --key csharp --value-file ./coverage.xml
    
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}